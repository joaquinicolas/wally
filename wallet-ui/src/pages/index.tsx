import Head from "next/head";
import React, { useEffect, useState } from "react";
import Grid from "@mui/material/Grid";
import Paper from "@mui/material/Paper";
import { Inter } from "next/font/google";
import CurrencySelector from "@/components/currentcySelector";
import Alert from "@mui/material/Alert";
import PriceEditor from "@/components/priceEditor";
import Header from "@/components/header";
import WalletAddressManager from "@/components/walletManager";
import Footer from "@/components/footer";

const inter = Inter({ subsets: ["latin"] });
export default function Home() {
  const [amount, setAmount] = useState("");
  const [currency, setCurrency] = useState("USD");
  const [walletAddress, setWalletAddress] = useState("");

  useEffect(() => {
    if (walletAddress) {
      fetchWalletData(walletAddress);
    }
  }, [walletAddress]);

  const fetchWalletData = async (address: string) => {
    try {
      // Replace this with your actual API call
      console.log(`Fetching data for wallet address: ${address}`);
      // const response = await fetch(`https://your-api.com/wallet-data/${address}`);
      // const data = await response.json();
      // Process the data as needed
    } catch (error) {
      console.error("Error fetching wallet data:", error);
    }
  };

  return (
    <>
      <Head>
        <title>Wally</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div
        style={{ display: "flex", flexDirection: "column", minHeight: "100vh" }}
      >
        <Header />
        <div style={{ padding: "16px", flexGrow: 1 }}>
          <Alert severity="warning" style={{ marginBottom: "16px" }}>
            This wallet is old
          </Alert>
          <Grid container spacing={4} alignItems="stretch">
            <Grid item xs={6}>
              <PriceEditor priceAmount={amount} setPriceAmount={setAmount} />
            </Grid>
            <Grid item xs={6}>
              <CurrencySelector
                currency={currency}
                setCurrency={setCurrency}
                priceAmount={amount}
              />
            </Grid>
            <Grid item xs={12}>
              <WalletAddressManager onFavoriteChanged={setWalletAddress} />
            </Grid>
          </Grid>
        </div>
        <Footer />
      </div>
    </>
  );
}
